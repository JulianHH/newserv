#!/usr/bin/perl -w

use strict;

my @cmdnames;
my @cmdlevels;
my @cmdargs;
my @cmddesc;
my @cmdfunc;
my @protos;
my @files;
my @help;

my @filelist = <*.c>;

my $modname;

unless (@ARGV) {
  print "Usage: $0 <module name>\n";
  exit(0);
} else {
  $modname=$ARGV[0];
}

my $smallname;
$smallname=$modname;
$smallname=~s/^chanserv_//;
$smallname=~s/\.so$//;

for (@filelist) {
  next if (/commandlist.c/);
  next if (/init.c/);
  
  my $fname = $_;
  my ($cn, $cl, $ca, $cd, $cf, $cp, $ch);
  $ch="";

  open INFILE,"<$fname";
  
  while(<INFILE>) {
    chomp;
    
    if (/CMDNAME: (.*)/) {
      $cn=$1;
    }
        
    if (/CMDLEVEL: (.*)/) {
      $cl=$1;
    }
    
    if (/CMDARGS: (.*)/) {
      $ca=$1;
    }
    
    if (/CMDDESC: (.*)/) {
      $cd=$1;
    }
    
    if (/CMDFUNC: (.*)/) {
      $cf=$1;
    }
    
    if (/CMDPROTO: (.*)/) {
      $cp=$1;
    }
    
    if (/CMDHELP: (.*)/) {
      $ch.=$1."\\n";
    }
  }
  
  if (defined $cn and defined $cl and defined $ca and defined $cd and defined $cf and defined $cp) {
    # valid command found 
    push @files, $fname;
    push @cmdnames, $cn;
    push @cmdlevels, $cl;
    push @cmdargs, $ca;
    push @cmddesc, $cd;
    push @cmdfunc, $cf;
    push @protos, $cp;
    push @help, $ch;
  } else {
    print "Warning: found source file $fname without complete tags, skipping...\n";
  }
}

if (@files < 1) {
  print "No commands found - are you in the right directory?\n";
  print "Exiting before I destroy something important.\n";
  exit(0);
}


open CL, ">commandlist.c";

print CL "/* Automatically generated by mkcommandlist.pl, do not edit. */\n\n";
print CL "#include \"../chanserv.h\"\n\n";

# Print prototypes
print CL "/* Prototypes */\n";
foreach (@protos) {
  print CL "$_\n";
}

my @names2 = @cmdnames;
my @func2 = @cmdfunc;

print CL "void ".$smallname."_init(void);\n";
print CL "void ".$smallname."_fini(void);\n\n";

print CL "\nvoid _init() {\n";
print CL "  ".$smallname."_init();\n";

while (my $cn = shift @cmdnames) {
  print CL "  chanservaddcommand(\"".$cn."\", ".(shift @cmdlevels).", ".(shift @cmdargs).", ";
  print CL (shift @cmdfunc).", \"".(shift @cmddesc)."\", \"".(shift @help),"\");\n";
}

print CL "}\n\nvoid _fini() {\n";
print CL "  ".$smallname."_fini();\n";

while (my $cn = shift @names2) {
  print CL "  chanservremovecommand(\"".$cn."\", ".(shift @func2).");\n";
}

print CL "}\n";

close CL;

open MF,">Makefile";

print MF "# Automatically generated Makefile, do not edit.\n\n";

print MF ".PHONY: all Makefile\n";

print MF "all: Makefile $modname\n\n";

print MF "Makefile:\n";
print MF "\t../mkcommandlist.pl $modname\n";

print MF "\n$modname: ";

push @files,"commandlist.c";
push @files,"init.c";

foreach (@files) {
  s/.c$/.o/;
  print MF "$_ ";
}

print MF "\n";
print MF "\t ld -shared -Bdynamic -o \$\@ \$\^ \n";

close MF;
